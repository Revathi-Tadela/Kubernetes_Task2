[ec2-user@ip-172-31-35-237 tmp]$ eksctl create cluster \
--name my-cluster \
--region us-east-1 \
--nodegroup-name linux-nodes \
--node-type t3.medium \
--nodes 2 \
--nodes-min 2 \
--nodes-max 4 \
--managed
2024-09-21 10:10:46 [ℹ]  eksctl version 0.190.0
2024-09-21 10:10:46 [ℹ]  using region us-east-1
2024-09-21 10:10:46 [ℹ]  setting availability zones to [us-east-1b us-east-1a]
2024-09-21 10:10:46 [ℹ]  subnets for us-east-1b - public:192.168.0.0/19 private:192.168.64.0/19
2024-09-21 10:10:46 [ℹ]  subnets for us-east-1a - public:192.168.32.0/19 private:192.168.96.0/19
2024-09-21 10:10:46 [ℹ]  nodegroup "linux-nodes" will use "" [AmazonLinux2/1.30]
2024-09-21 10:10:46 [ℹ]  using Kubernetes version 1.30
2024-09-21 10:10:46 [ℹ]  creating EKS cluster "my-cluster" in "us-east-1" region with managed nodes
2024-09-21 10:10:46 [ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup
2024-09-21 10:10:46 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-1 --cluster=my-cluster'
2024-09-21 10:10:46 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "my-cluster" in "us-east-1"
2024-09-21 10:10:46 [ℹ]  CloudWatch logging will not be enabled for cluster "my-cluster" in "us-east-1"
2024-09-21 10:10:46 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=us-east-1 --cluster=my-cluster'
2024-09-21 10:10:46 [ℹ]  default addons vpc-cni, kube-proxy, coredns were not specified, will install them as EKS addons
2024-09-21 10:10:46 [ℹ]  
2 sequential tasks: { create cluster control plane "my-cluster", 
    2 sequential sub-tasks: { 
        2 sequential sub-tasks: { 
            1 task: { create addons },
            wait for control plane to become ready,
        },
        create managed nodegroup "linux-nodes",
    } 
}
2024-09-21 10:10:46 [ℹ]  building cluster stack "eksctl-my-cluster-cluster"
2024-09-21 10:10:46 [ℹ]  deploying stack "eksctl-my-cluster-cluster"
2024-09-21 10:11:16 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:11:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:12:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:13:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:14:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:15:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:16:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:17:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:18:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:19:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:20:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:21:46 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2024-09-21 10:21:47 [!]  recommended policies were found for "vpc-cni" addon, but since OIDC is disabled on the cluster, eksctl cannot configure the requested permissions; the recommended way to provide IAM permissions for "vpc-cni" addon is via pod identity associations; after addon creation is completed, add all recommended policies to the config file, under `addon.PodIdentityAssociations`, and run `eksctl update addon`
2024-09-21 10:21:47 [ℹ]  creating addon
2024-09-21 10:21:48 [ℹ]  successfully created addon
2024-09-21 10:21:48 [ℹ]  creating addon
2024-09-21 10:21:48 [ℹ]  successfully created addon
2024-09-21 10:21:49 [ℹ]  creating addon
2024-09-21 10:21:49 [ℹ]  successfully created addon
2024-09-21 10:23:49 [ℹ]  building managed nodegroup stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:23:49 [ℹ]  deploying stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:23:49 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:24:19 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:25:19 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:26:19 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-linux-nodes"
2024-09-21 10:26:19 [ℹ]  waiting for the control plane to become ready
2024-09-21 10:26:19 [✔]  saved kubeconfig as "/home/ec2-user/.kube/config"
2024-09-21 10:26:19 [ℹ]  no tasks
2024-09-21 10:26:19 [✔]  all EKS cluster resources for "my-cluster" have been created
2024-09-21 10:26:19 [✔]  created 0 nodegroup(s) in cluster "my-cluster"
2024-09-21 10:26:19 [ℹ]  nodegroup "linux-nodes" has 2 node(s)
2024-09-21 10:26:19 [ℹ]  node "ip-192-168-21-167.ec2.internal" is ready
2024-09-21 10:26:19 [ℹ]  node "ip-192-168-52-115.ec2.internal" is ready
2024-09-21 10:26:19 [ℹ]  waiting for at least 2 node(s) to become ready in "linux-nodes"
2024-09-21 10:26:19 [ℹ]  nodegroup "linux-nodes" has 2 node(s)
2024-09-21 10:26:19 [ℹ]  node "ip-192-168-21-167.ec2.internal" is ready
2024-09-21 10:26:19 [ℹ]  node "ip-192-168-52-115.ec2.internal" is ready
2024-09-21 10:26:19 [✔]  created 1 managed nodegroup(s) in cluster "my-cluster"
2024-09-21 10:26:20 [ℹ]  kubectl command should work with "/home/ec2-user/.kube/config", try 'kubectl get nodes'
2024-09-21 10:26:20 [✔]  EKS cluster "my-cluster" in "us-east-1" region is ready
